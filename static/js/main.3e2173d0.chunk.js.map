{"version":3,"sources":["assets/SlidingCroped.mp3","kerber_character.png","components/Square.js","components/Utility.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","props","klassa","gameStatusCSS","picture","myPicture","gameStatus","gs","move","transition","transform","concat","classMove","x","y","react_default","a","createElement","style","className","classContainer","onClick","onSquareClick","draggable","class","src","alt","PlayAudio","myAudio","play","GameWin","pozContainerArr","classArrTrimed","gameStatusCounter","i","Container","state","puzzle","emptyPoz","emptySquare","_this$state","_this","Object","toConsumableArray","squareClicked","Math","abs","sound","setState","refs","temp","push","console","log","this","clas","clasContainer","classArr","classContainerArr","square","k","pop","sort","random","indx","id","empty","slice","_this2","squareMaped","map","sq","key","ref","audio","Component","App","startImage","components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e2173d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SlidingCroped.8d3a9594.mp3\";","module.exports = __webpack_public_path__ + \"static/media/kerber_character.8f980984.png\";","import React from 'react';\n\nexport default (props) => {\n  let picture=props.myPicture;\n  let klassa;\n  let gameStatus=props.gameStatus;\n  let gameStatusCSS;\n  \n  if(picture){\n    klassa=\"square show\"\n  }else{\n    klassa=\"square\"\n  }\n\n   gameStatusCSS= gameStatus.gs ? 'win' : null;\n\n  let move = {\n    transition:'transform 1s ease',\n    transform:`translate(${props.classMove.x}px,${props.classMove.y}px)`,\n   };\n\n  return (\n            <div style={move} className={`${props.classContainer} ${klassa} ${gameStatusCSS}`} \n                 onClick={props.onSquareClick}> \n                \n               <img draggable=\"false\" className={props.class} src={picture} alt=''></img>\n              \n                </div>\n  )\n}\n\n\n","export function PlayAudio(myAudio) {\n    myAudio.play();\n  }\n\n  export function GameWin(pozContainerArr,classArrTrimed) {\n \n    let gameStatus={\n      gameStatusCounter:0,\n      gs:false\n    };\n    for(let i=0;i<9;i++){\n       if(pozContainerArr[i]===classArrTrimed[i]){\n        gameStatus.gameStatusCounter++;\n       }\n    }\n    gameStatus.gs= gameStatus.gameStatusCounter===9 ? true : false;\n   return gameStatus\n  }\n\n","import React, { Component } from 'react';\nimport Square from './Square';\nimport {PlayAudio,GameWin} from './Utility';\nimport audio from \"../assets/SlidingCroped.mp3\";\n\nclass Container extends Component {\n    state={\n        puzzle:[],\n        myPicture:null,\n        emptyPoz:{x:3,y:3},\n        gameStatus:{\n            gameStatusCounter:0,\n            gs:false\n        }\n          \n        \n    }\n\n    componentDidMount() {\n      let {puzzle}=this.state;\n      puzzle=[...puzzle];\n      console.log('Willmount')\n      let classArr=[];\n      let classContainerArr=[];\n      let classArrTrimed=[];\n    \n      let square={};\n      let clas;\n      let clasContainer;\n\n      for(let i=1; i<4;i++){\n        for(let k=1; k<4; k++){\n            clas=`square-${i}${k}`;//creating class for images\n            classArr.push(clas);\n            clasContainer=`container-square-${i}${k}`;//creating class for container divs images\n            classContainerArr.push(clasContainer);\n        }}\n        classArr.pop();\n         classArr.sort(()=>Math.random()-0.5); //shufleing the array of images\n     \n        let indx=0;\n\n      for(let i=1; i<4;i++){\n        for(let k=1; k<4; k++){\n            square={id:indx,x:k,y:i,class:classArr[indx],\n            classContainer:classContainerArr[indx],\n            classMove:{x:0,y:0},\n            empty:{x:k,y:i},\n            sound:true\n        };\n            puzzle.push(square);    \n            indx++;\n        }\n      }\n    \n      puzzle.pop()\n      square={id:8, x:3, y:3, class:'square-empty',\n      classContainer:'container-square-empty',\n      classMove:{x:0,y:0},\n      empty:{x:null,y:null},\n      sound:false\n    };\n      puzzle.push(square);\n\n      for(let i in puzzle){ // CHECKING IS IT SOLVED\n        let temp= puzzle[i].class.slice(7,9);      \n      classArrTrimed.push(temp);\n    }\n    classArrTrimed.pop();\n    classArrTrimed.push('33');\n\n \n\n      this.setState({puzzle,classArr,classArrTrimed});\n    }\n\n\n    onSquareClick=(i)=>{\n        let {puzzle,emptyPoz,classArrTrimed}=this.state;\n        puzzle=[...puzzle];\n     \n        classArrTrimed=[...classArrTrimed]\n        let emptySquare;\n        let squareClicked=puzzle[i];\n        let gameStatus;\n        \n        for(let i in puzzle){\n            if(puzzle[i].x===emptyPoz.x && puzzle[i].y===emptyPoz.y ){  \n                emptySquare=puzzle[i];//looking for empty square\n              \n                 \n                if(Math.abs((squareClicked.x - emptySquare.x))===1 && squareClicked.y === emptySquare.y){\n                //  moving on X axis\n             \n                    if(emptySquare.x-squareClicked.x===1){//checking is it moving right\n                        squareClicked.classMove.x+=133;\n                        emptySquare.classMove.x-=133;\n                        squareClicked.x++;\n                        emptySquare.x--;  \n                        emptyPoz.x--;\n                        emptySquare.sound=false;   \n                        this.setState({puzzle,emptyPoz})         \n                     } \n                     else if(emptySquare.x-squareClicked.x===-1){//checking is it moving left\n                        squareClicked.classMove.x-=133;\n                        emptySquare.classMove.x+=133;\n                        squareClicked.x--;\n                        emptySquare.x++;  \n                        emptyPoz.x++; \n                        emptySquare.sound=false;   \n                        this.setState({puzzle,emptyPoz})             \n                     }\n                     \n                }\n                if(Math.abs((squareClicked.y - emptySquare.y))===1 && squareClicked.x === emptySquare.x){\n                 //moving on Y axis\n                 if(emptySquare.y-squareClicked.y===1){//checking is it moving up\n                    squareClicked.classMove.y+=133;\n                    emptySquare.classMove.y-=133;\n                    squareClicked.y++;\n                    emptySquare.y--;  \n                    emptyPoz.y--;   \n                    emptySquare.sound=false;   \n                    this.setState({puzzle,emptyPoz})         \n                 } \n                 else if(emptySquare.y-squareClicked.y===-1){//checking is it moving down\n                    squareClicked.classMove.y-=133;\n                    emptySquare.classMove.y+=133;\n                    squareClicked.y--;\n                    emptySquare.y++;  \n                    emptyPoz.y++; \n                    emptySquare.sound=false;   \n                    this.setState({puzzle,emptyPoz})             \n                 }\n                }\n            } \n              \n                if(squareClicked.sound){ // play audio when moving\n                    let myAudio = this.refs.myAudio;\n                    PlayAudio(myAudio);\n                }\n\n                let pozContainerArr=[];\n                for(let i in puzzle){\n                    let temp= `${puzzle[i].y}${puzzle[i].x}`;\n                    pozContainerArr.push(temp);\n                }\n                gameStatus=GameWin(pozContainerArr,classArrTrimed);//checking is it all solved \n                console.log(gameStatus);\n                this.setState({puzzle,gameStatus,pozContainerArr,classArrTrimed});\n        }\n    }\n\n\n    \n    \n    render() {\n   \n        let squareMaped=this.state.puzzle.map((sq,i)=>{\n            return(\n            <Square onSquareClick={()=>this.onSquareClick(i)}\n             key={i}\n             x={sq.x} y={sq.y} \n             class={sq.class}\n             classContainer={sq.classContainer}\n             classMove={sq.classMove}\n             myPicture={this.props.myPicture}\n             gameStatus={this.state.gameStatus}\n            />)\n        })\n        return (\n            <div className=\"app-container\">   \n              {squareMaped}\n              <audio ref={\"myAudio\"} src={audio} ></audio>   \n           </div>\n        );\n    }\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './components/Container'\nimport { CropImage} from './components/Utility'\nimport OriginalImage from './components/OriginalImage'\nimport startImage from './kerber_character.png'\n\nclass App extends Component {\nstate={\n  myPicture:startImage\n\n}\n\n\n// onSelectFile = (e) => {\n//   if (e.target.files && e.target.files.length > 0) {\n//     const reader = new FileReader();\n//     reader.addEventListener('load', () => {\n//       this.setState({ myPicture: reader.result });\n//     });\n//     reader.readAsDataURL(e.target.files[0]);\n//   }\n// }\n\n// onSelectURL=(e)=>{\n//   console.log(e.target.value)\n//   this.setState({myPicture:e.target.value});\n// }\n\n  render() {\n   \n    return (\n      <div className=\"wraper\">\n   <div className=\"main-container\">\n             {/* <div className=\"my-form\">\n             <input type=\"file\" onChange={this.onSelectFile} />\n           \n              <input onChange={this.onSelectURL} type=\"text\"  \n                        placeholder=\"OR paste the image URL address\" size=\"30\" name=\"myPicture\"></input>\n              </div> */}\n                <Container myPicture={this.state.myPicture}/>   \n               {/* <OriginalImage myPicture={this.state.myPicture}/>     */}\n              \n      </div>\n      </div>\n   \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}